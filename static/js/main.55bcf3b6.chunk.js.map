{"version":3,"sources":["components/appHeader/AppHeader.js","components/appHeader/useWeather.js","components/tabsBar/TabsBar.js","components/offerInput/OfferInput.js","components/resultModal/ResultModal.js","containers/offersForm/OffersForm.js","config/main.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","weather","display","alignItems","AppHeader","weatherApi","testId","classes","cityWeatherAPI","useState","setWeather","useEffect","fetch","then","res","json","data","name","city","tempreature","Math","round","main","temp","icon","catch","useWeather","className","data-testid","AppBar","position","Toolbar","IconButton","edge","color","aria-label","fontSize","Typography","variant","Button","href","src","alt","TabsBar","source","activeId","onClick","Tabs","value","indicatorColor","textColor","onChange","map","tab","Tab","label","key","margin","justifyContent","flexDirection","padding","inputField","maxWidth","minWidth","alignSelf","submitButton","alert","OfferInput","offerValue","onInput","fieldLabel","fieldValue","onSubmit","withoutValueTestId","withValueTestId","Alert","severity","AlertTitle","align","TextField","id","type","InputProps","startAdornment","InputAdornment","inputProps","min","max","placeholder","ResultModal","result","resetAction","offers","open","setOpen","Dialog","keepMounted","onClose","onExit","DialogTitle","DialogContent","DialogContentText","employer","employee","DialogActions","minHeight","mainContainer","mainPaper","maxHeight","marginTop","OffersForm","tabs","activeTab","setActiveTab","setOffers","inputValue","setInputValue","match","setMatch","Container","Paper","elevation","e","Number","target","updatedOffers","Object","assign","TABS_DATA","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.55bcf3b6.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport useWeather from './useWeather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'left',\n  },\n  weather: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nexport default function AppHeader({ weatherApi, title }) {\n  AppHeader.testId = 'app-header-test';\n  const classes = useStyles();\n  const weather = useWeather(weatherApi);\n\n  return (\n    <div className={classes.root} data-testid={AppHeader.testId}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MonetizationOnIcon fontSize=\"large\" />\n          </IconButton>\n          <Typography variant=\"h5\" className={classes.title}>{title}</Typography>\n          {weather ? (\n            <div className={classes.weather}>\n              <Button color=\"inherit\" href=\"https://openweathermap.org/city/2643743\">\n                <span>\n                  {' '}\n                  {weather.city}\n                </span>\n              </Button>\n              {!!weather.icon && <img src={`http://openweathermap.org/img/wn/${weather.icon}.png`} alt=\"weather-icon\" />}\n              <span>\n                {' '}\n                {weather.tempreature}\n                {' '}\n                Â°C\n              </span>\n            </div>\n          ) : <span>Loading ...</span>}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\n\n\nexport default function useWeather(cityWeatherAPI) {\n  const [weather, setWeather] = useState();\n  useEffect(() => {\n    fetch(cityWeatherAPI)\n      .then((res) => res.json()).then((data) => {\n        /**\n           * due to limate usage of the free plan in openweather\n           * the response might return as (too many requests),\n           * in this case the response will haven no (name)\n           */\n        if (data.name) {\n          setWeather({\n            city: data.name,\n            tempreature: Math.round(data.main.temp),\n            icon: data.weather[0].icon,\n          });\n        }\n      }).catch(() => setWeather(false));\n  }, []);\n  return weather;\n}\n","import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nexport default function TabsBar({ source, activeId, onClick }) {\n  TabsBar.testId = 'tabs-bar-test';\n  return (\n    <Tabs\n      data-testid={TabsBar.testId}\n      value={activeId}\n      indicatorColor=\"secondary\"\n      textColor=\"secondary\"\n      onChange={onClick}\n      aria-label=\"disabled tabs example\"\n    >\n      {source.map((tab) => <Tab label={tab.label} key={tab.label} />)}\n    </Tabs>\n  );\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(4),\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    padding: theme.spacing(4),\n\n  },\n  inputField: {\n    margin: theme.spacing(2),\n    maxWidth: 496,\n    minWidth: 296,\n    alignSelf: 'center',\n\n  },\n  submitButton: {\n    margin: theme.spacing(2),\n    maxWidth: 496,\n    minWidth: 296,\n    alignSelf: 'center',\n\n  },\n  alert: {\n    margin: 24,\n  },\n}));\n\nexport default function OfferInput({\n  offerValue, onInput, fieldLabel, fieldValue, onSubmit, title,\n}) {\n  const classes = useStyles();\n  OfferInput.withoutValueTestId = 'offer-input-test';\n  OfferInput.withValueTestId = 'offer-input-test-value';\n\n  if (offerValue) {\n    return (\n      <div className={classes.alert} data-testid={OfferInput.withValueTestId}>\n        <Alert severity=\"info\">\n          <AlertTitle><strong>Value entered</strong></AlertTitle>\n          The entered value has beed saved for this user.\n          {' '}\n        </Alert>\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes.root} data-testid={OfferInput.withoutValueTestId}>\n      <Typography variant=\"h6\" align=\"center\">{title}</Typography>\n      <TextField\n        className={classes.inputField}\n        id=\"standard-basic\"\n        type=\"number\"\n        label={fieldLabel}\n        variant=\"outlined\"\n        onChange={onInput}\n        value={fieldValue}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">$ </InputAdornment>,\n          inputProps: { min: 0, max: 9999999999 },\n          placeholder: 'enter value grater than 0',\n        }}\n      />\n      <Button\n        className={classes.submitButton}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onSubmit}\n      >\n        Submit\n      </Button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(4),\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    padding: theme.spacing(4),\n\n  },\n  inputField: {\n    margin: theme.spacing(2),\n    maxWidth: 496,\n    minWidth: 296,\n    alignSelf: 'center',\n\n  },\n  submitButton: {\n    margin: theme.spacing(2),\n    maxWidth: 496,\n    minWidth: 296,\n    alignSelf: 'center',\n  },\n}));\n\n\nexport default function ResultModal({ result = null, resetAction, offers }) {\n  const successMessage = 'Great, you got into an agreement!';\n  const failureMessage = 'Unfortunately, the expectations didn\\'t meet, try again!';\n  const [open, setOpen] = useState(true);\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Dialog\n        open={open}\n        keepMounted\n        onClose={handleClose}\n        onExit={resetAction}\n      >\n        <DialogTitle>{result ? 'Success!' : 'Failure!'}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <Alert severity={result ? 'success' : 'error'}>\n              {result ? successMessage : failureMessage}\n            </Alert>\n            <br />\n            Employer offers:\n            {' '}\n            <strong>{offers.employer}</strong>\n            <br />\n            Employee wants:\n            {' '}\n            <strong>{offers.employee}</strong>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={resetAction} color=\"primary\">Reset</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TabsBar from '../../components/tabsBar/TabsBar';\nimport OfferInput from '../../components/offerInput';\nimport ResultModal from '../../components/resultModal';\n\nconst useStyles = makeStyles({\n  root: {\n    minHeight: '100vh',\n  },\n  mainContainer: {\n    minHeight: '100vh',\n  },\n  mainPaper: {\n    minHeight: 490,\n    maxHeight: 490,\n    marginTop: 48,\n  },\n});\n\nexport default function OffersForm({ tabs = [] }) {\n  OffersForm.testId = 'testId';\n  const [activeTab, setActiveTab] = useState(tabs[0]);\n  const [offers, setOffers] = useState({ employer: 0, employee: 0 });\n  const [inputValue, setInputValue] = useState('');\n  const [match, setMatch] = useState(null);\n  const classes = useStyles();\n\n  const checkMatch = () => {\n    if (offers.employer > 0 && offers.employee > 0) {\n      setMatch(offers.employee <= offers.employer);\n    }\n  };\n\n  const handleSubmit = () => {\n    const updatedOffers = Object.assign(offers, { [activeTab.name]: Number(inputValue) });\n    setOffers(updatedOffers);\n    setInputValue('');\n    checkMatch();\n  };\n\n  const resetState = () => {\n    setActiveTab(tabs[0]);\n    setMatch(null);\n    setInputValue('');\n    setOffers({ employer: 0, employee: 0 });\n  };\n\n  return (\n    <div className={classes.root} data-testid={OffersForm.testId}>\n      <Container className={classes.mainContainer}>\n        <Paper className={classes.mainPaper} elevation={3}>\n          <TabsBar\n            onClick={(e, value) => setActiveTab(tabs[value])}\n            source={tabs}\n            activeId={activeTab.id}\n          />\n          <OfferInput\n            offerValue={offers[activeTab.name]}\n            onInput={(e) => setInputValue(Number(e.target.value))}\n            fieldLabel={activeTab.label}\n            fieldValue={inputValue}\n            onSubmit={handleSubmit}\n            title={activeTab.title}\n          />\n          {match !== null && (\n            <ResultModal\n              result={match}\n              offers={offers}\n              resetAction={resetState}\n            />\n          )}\n        </Paper>\n      </Container>\n    </div>\n  );\n}\n","// tabs names\nexport const TABS_DATA = [\n  {\n    id: 0,\n    label: 'Employer',\n    name: 'employer',\n    title: 'As an Employer, enter your maximum offer:',\n  },\n  {\n    id: 1,\n    label: 'Employee',\n    name: 'employee',\n    title: 'As an Employee, enter your minimum acceptable number:',\n  },\n];\n\n// openweather tesing api\nexport const LONDON_WEATHER = 'https://openweathermap.org/data/2.5/weather?q=London,uk&appid=439d4b804bc8187953eb36d2a8c26a02';\n\n// app name\nexport const APP_TITLE = 'Offers matcher';\n","import React from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppHeader from './components/appHeader';\nimport OffersForm from './containers/offersForm';\nimport { LONDON_WEATHER, TABS_DATA, APP_TITLE } from './config/main';\n\nconst useStyles = makeStyles({\n  root: {\n    minHeight: '100vh',\n  },\n});\n\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root} data-testid=\"app-wrapper\">\n      <AppHeader weatherApi={LONDON_WEATHER} title={APP_TITLE} />\n      <OffersForm tabs={TABS_DATA} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}